{
  "openapi": "3.0.1",
  "info": {
    "title": "SleekFlowTodoList API 1.0",
    "description": "An ASP.NET Core Web API for managing users TODO items",
    "version": "1.0"
  },
  "paths": {
    "/api/v1/Authenticate": {
      "post": {
        "tags": [
          "Authenticate"
        ],
        "description": "Verifies the identity of a user in DB",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Authenticate.Create.Request"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Authenticate.Create.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Authenticate.Create.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Authenticate.Create.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Authenticate.Create.Model"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Authorize": {
      "post": {
        "tags": [
          "Authorize"
        ],
        "description": "Determines user access rights, currently only scope to check is \"admin\" rights",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Authorize.Create.Request"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Authorize.Create.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Authorize.Create.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Authorize.Create.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Authorize.Create.Model"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [
              ""
            ]
          }
        ]
      }
    },
    "/api/v1/AuthorizeAzureAdB2C": {
      "post": {
        "tags": [
          "AuthorizeAzureAdB2C"
        ],
        "description": "Determines user access rights, currently only scope to check is \"admin\" rights. Produces the same token as /api/v1/Authorize POST service but requires azureAdB2CAuthenticateToken generated by Azure AD B2C identity provider.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.AuthorizeAzureAdB2C.Create.Request"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.AuthorizeAzureAdB2C.Create.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.AuthorizeAzureAdB2C.Create.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.AuthorizeAzureAdB2C.Create.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.AuthorizeAzureAdB2C.Create.Model"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "AzureAdB2C": [
              "https://annatab2c.onmicrosoft.com/deabcbf9-bbf2-4829-b062-0c125044f874/Authorization"
            ]
          }
        ]
      }
    },
    "/api/v1/Todo": {
      "get": {
        "tags": [
          "Todo"
        ],
        "description": "Returns the list of TODO for the current user",
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fetched the list of TODO",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Pagination.SearchResponse`1[[SleekFlowTodoListAPI.Controllers.Todos.Index.Model, SleekFlowTodoListAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [
              ""
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Todo"
        ],
        "description": "Creates a TODO record for the current authorized user",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Todos.Create.Request"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Todos.Create.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Todos.Create.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Todos.Create.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created the TODO"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [
              ""
            ]
          }
        ]
      }
    },
    "/api/v1/Todo/{id}": {
      "get": {
        "tags": [
          "Todo"
        ],
        "description": "Returns the detail of a TODO only from the user's TODO list. Replace arg {id} with any \"id\" fetched from /api/v1/Todo GET service",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Todos.Details.Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fetched the TODO detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Todos.Details.Model"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [
              ""
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Todo"
        ],
        "description": "Updates the detail of a TODO only from the user's TODO list. Replace arg {id} with any \"id\" fetched from /api/v1/Todo GET service",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Todos.Update.Request"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Todos.Update.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Todos.Update.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Todos.Update.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated the TODO detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Todos.Update.Model"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [
              ""
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Todo"
        ],
        "description": "Deletes the detail of a TODO only from the user's TODO list. Replace arg {id} with any \"id\" fetched from /api/v1/Todo GET service",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted the TODO",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Todos.Delete.Model"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [
              ""
            ]
          }
        ]
      }
    },
    "/api/v1/TodoStatus": {
      "get": {
        "tags": [
          "TodoStatus"
        ],
        "description": "Return the list of plausible TODO statuses! The \"code\" value will be used as the int value of \"status\" for /api/v1/Todo/{id} PUT service.",
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fetched the list of plausible TODO statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Pagination.SearchResponse`1[[SleekFlowTodoListAPI.Controllers.Todos.TodoStatuses.Index.Model, SleekFlowTodoListAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [
              ""
            ]
          }
        ]
      }
    },
    "/api/v1/User": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Only users with admin access rights is authorized to use this service! The list does not return the record for admin user due to security concern.",
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fetched the list of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Pagination.SearchResponse`1[[SleekFlowTodoListAPI.Controllers.Users.Index.Model, SleekFlowTodoListAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [
              ""
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "User"
        ],
        "description": "Creates a non-admin user with default password specified in the configuration of the API server",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Create.Request"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Create.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Create.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Create.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created the user"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [
              ""
            ]
          }
        ]
      }
    },
    "/api/v1/User/{id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Deletes the user with the specified \"id\". Replace arg {id} with any \"id\" fetched from /api/v1/User GET service. Deleting admin user will throw an error! Only admin is authorized to delete any users!",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Delete.Model"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [
              ""
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "User"
        ],
        "description": "Returns the detail of a user with the specified \"id\". Replace arg {id} with any \"id\" fetched from /api/v1/User GET service. Admin can view all users detail but non admin users can only view their own details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Details.Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fetched the user detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Details.Model"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [
              ""
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Updates the detail of a given user with the specified \"id\". Replace arg {id} with any \"id\" fetched from /api/v1/User GET service",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Update.Request"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Update.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Update.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Update.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated the user detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Update.Model"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [
              ""
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "SleekFlowTodoListAPI.Controllers.Pagination.SearchResponse`1[[SleekFlowTodoListAPI.Controllers.Todos.Index.Model, SleekFlowTodoListAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "orderBy": {
            "type": "string",
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Todos.Index.Model"
            },
            "nullable": true
          },
          "searchString": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Pagination.SearchResponse`1[[SleekFlowTodoListAPI.Controllers.Todos.TodoStatuses.Index.Model, SleekFlowTodoListAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "orderBy": {
            "type": "string",
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Todos.TodoStatuses.Index.Model"
            },
            "nullable": true
          },
          "searchString": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Pagination.SearchResponse`1[[SleekFlowTodoListAPI.Controllers.Users.Index.Model, SleekFlowTodoListAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "orderBy": {
            "type": "string",
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SleekFlowTodoListAPI.Controllers.Users.Index.Model"
            },
            "nullable": true
          },
          "searchString": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Todos.Create.Request": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Todos.Delete.Model": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Todos.Details.Model": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Todos.Details.Request": {
        "type": "object",
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Todos.Index.Model": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Todos.TodoStatuses.Index.Model": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Todos.Update.Model": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Todos.Update.Request": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Users.Authenticate.Create.Model": {
        "type": "object",
        "properties": {
          "authToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Users.Authenticate.Create.Request": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Users.Authorize.Create.Model": {
        "type": "object",
        "properties": {
          "authToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Users.Authorize.Create.Request": {
        "type": "object",
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Users.AuthorizeAzureAdB2C.Create.Model": {
        "type": "object",
        "properties": {
          "authToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Users.AuthorizeAzureAdB2C.Create.Request": {
        "type": "object",
        "properties": {
          "azureAdB2CTokenSubClaim": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Users.Create.Request": {
        "type": "object",
        "properties": {
          "azureAdB2CTokenSubClaim": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Users.Delete.Model": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "admin": {
            "type": "boolean"
          },
          "azureAdB2CTokenSubClaim": {
            "type": "string",
            "format": "uuid"
          },
          "lastLoggedIn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "authToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Users.Details.Model": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "admin": {
            "type": "boolean"
          },
          "azureAdB2CTokenSubClaim": {
            "type": "string",
            "format": "uuid"
          },
          "lastLoggedIn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "authToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Users.Details.Request": {
        "type": "object",
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Users.Index.Model": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "admin": {
            "type": "boolean"
          },
          "azureAdB2CTokenSubClaim": {
            "type": "string",
            "format": "uuid"
          },
          "lastLoggedIn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "authToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Users.Update.Model": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "admin": {
            "type": "boolean"
          },
          "azureAdB2CTokenSubClaim": {
            "type": "string",
            "format": "uuid"
          },
          "lastLoggedIn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "authToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SleekFlowTodoListAPI.Controllers.Users.Update.Request": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "azureAdB2CTokenSubClaim": {
            "type": "string",
            "format": "uuid"
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      },
      "AzureAdB2C": {
        "type": "oauth2",
        "description": "Azure AD B2C authorization",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://annatab2c.b2clogin.com/annatab2c.onmicrosoft.com/oauth2/v2.0/authorize?p=B2C_1_DealerPortPreview",
            "tokenUrl": "https://annatab2c.b2clogin.com/annatab2c.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1_DealerPortPreview",
            "scopes": {
              "https://annatab2c.onmicrosoft.com/deabcbf9-bbf2-4829-b062-0c125044f874/Authorization": "Provides authorization token for Dealer Portal WebAPI"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "Bearer": [ ],
      "AzureAdB2C": [
        "https://annatab2c.onmicrosoft.com/deabcbf9-bbf2-4829-b062-0c125044f874/Authorization"
      ]
    }
  ]
}